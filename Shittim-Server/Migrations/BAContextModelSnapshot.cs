// <auto-generated />
using System;
using BlueArchiveAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ShittimServer.Migrations
{
    [DbContext(typeof(BAContext))]
    partial class BAContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("BlueArchiveAPI.Models.Academy", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZoneScheduleGroupRecords")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZoneVisitCharacterIds")
                        .HasColumnType("TEXT");

                    b.HasKey("ServerId");

                    b.ToTable("Academies");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.AcademyLocation", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Exp")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rank")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("AcademyLocations");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.AccountAttachment", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("EmblemUniqueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("AccountAttachments");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.AccountCurrency", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AcademyLocationRankSum")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountLevel")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrencyDict")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdateTimeDict")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.HasIndex("UserId");

                    b.ToTable("AccountCurrencies");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.AccountLevelReward", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RewardId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.HasIndex("UserId");

                    b.ToTable("AccountLevelRewards");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.AccountTutorial", b =>
                {
                    b.Property<long>("AccountServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TutorialIds")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccountServerId");

                    b.HasIndex("UserId");

                    b.ToTable("AccountTutorials");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.Cafe", b =>
                {
                    b.Property<long>("CafeDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CafeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CafeRank")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CafeVisitCharacterDBs")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsNew")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastProductionCollectTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastSummonDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductionData")
                        .HasColumnType("TEXT");

                    b.HasKey("CafeDBId");

                    b.ToTable("Cafes");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.CampaignChapterReward", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChapterUniqueId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReceiveDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("RewardType")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("CampaignChapterRewards");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.CampaignStageHistory", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChapterUniqueId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ClearTurnRecord")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("FirstClearRewardReceive")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastPlay")
                        .HasColumnType("TEXT");

                    b.Property<long>("StageUniqueId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Star1Flag")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Star2Flag")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Star3Flag")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StarRewardReceive")
                        .HasColumnType("TEXT");

                    b.Property<long>("StoryUniqueId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TacticClearCountWithRankSRecord")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TodayPlayCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TodayPlayCountForUI")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TodayPurchasePlayCountHardStage")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("CampaignStageHistories");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.Character", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EquipmentServerIds")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExSkillLevel")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Exp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExtraPassiveSkillLevel")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FavorExp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FavorRank")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsNew")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LeaderSkillLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PassiveSkillLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PotentialStats")
                        .HasColumnType("TEXT");

                    b.Property<int>("PublicSkillLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StarGrade")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UniqueId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.Costume", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UniqueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("Costumes");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.CurrencyTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AmountChange")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrencyType")
                        .HasColumnType("INTEGER");

                    b.Property<long>("NewBalance")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TransactionTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CurrencyTransactions");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.Echelon", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CombatStyleIndex")
                        .HasColumnType("TEXT");

                    b.Property<long>("EchelonNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EchelonType")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LeaderServerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MainSlotServerIds")
                        .HasColumnType("TEXT");

                    b.Property<string>("SkillCardMulliganCharacterIds")
                        .HasColumnType("TEXT");

                    b.Property<string>("SupportSlotServerIds")
                        .HasColumnType("TEXT");

                    b.Property<long>("TSSServerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsingFlag")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("Echelons");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.EchelonPreset", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CombatStyleIndex")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExtensionType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .HasColumnType("TEXT");

                    b.Property<long>("LeaderUniqueId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MulliganUniqueIds")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpecialUniqueIds")
                        .HasColumnType("TEXT");

                    b.Property<string>("StrikerUniqueIds")
                        .HasColumnType("TEXT");

                    b.Property<long>("TSSInteractionUniqueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("EchelonPresets");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.EchelonPresetGroup", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExtensionType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GroupLabel")
                        .HasColumnType("TEXT");

                    b.HasKey("ServerId");

                    b.ToTable("EchelonPresetGroups");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.Emblem", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReceiveDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("UniqueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("Emblems");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.Equipment", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("BoundCharacterServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Exp")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsNew")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StackCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tier")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UniqueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.EventContentPermanent", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("EventContentId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReceivedCharacterReward")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsStageAllClear")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("EventContentPermanents");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.Furniture", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CafeDBId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ItemDeploySequence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Location")
                        .HasColumnType("INTEGER");

                    b.Property<float>("PositionX")
                        .HasColumnType("REAL");

                    b.Property<float>("PositionY")
                        .HasColumnType("REAL");

                    b.Property<float>("Rotation")
                        .HasColumnType("REAL");

                    b.Property<int>("StackCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UniqueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("Furnitures");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.Gear", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("BoundCharacterServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Exp")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SlotIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tier")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UniqueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("Gears");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.Item", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsNew")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StackCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UniqueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.Mail", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRead")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReceived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParcelInfos")
                        .HasColumnType("TEXT");

                    b.Property<string>("RemainParcelInfos")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sender")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UniqueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("Mails");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.MemoryLobby", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("MemoryLobbyUniqueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("MemoryLobbies");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.MissionProgress", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Complete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ExpiryTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("MissionId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ProgressCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("ServerId");

                    b.ToTable("MissionProgresses");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.MomoTalkOutline", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FavorLevel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsNew")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("LatestMessageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("MomoTalkOutlines");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.MultiFloorRaid", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Difficulty")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SeasonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("MultiFloorRaids");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.ScenarioGroupHistory", b =>
                {
                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ScenarioGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClearCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ClearDate")
                        .HasColumnType("TEXT");

                    b.HasKey("AccountServerId", "ScenarioGroupId");

                    b.ToTable("ScenarioGroupHistories");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.ScenarioHistory", b =>
                {
                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ScenarioId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ClearDate")
                        .HasColumnType("TEXT");

                    b.HasKey("AccountServerId", "ScenarioId");

                    b.ToTable("ScenarioHistories");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.StickerBook", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UnusedStickerIds")
                        .HasColumnType("TEXT");

                    b.Property<string>("UsedStickerIds")
                        .HasColumnType("TEXT");

                    b.HasKey("ServerId");

                    b.ToTable("StickerBooks");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.StrategyObjectHistory", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StrategyObjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("StrategyObjectHistories");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.TimeAttackDungeonRoom", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPractice")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RewardDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("RoomId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SeasonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("TimeAttackDungeonRooms");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Attribute")
                        .HasColumnType("TEXT");

                    b.Property<string>("CallName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CallNameKatakana")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExtraData")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gid")
                        .HasColumnType("TEXT");

                    b.Property<string>("Guid")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsGuest")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsNew")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastConnectTime")
                        .HasColumnType("TEXT");

                    b.Property<long?>("LastLogin")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NeedsNameSetup")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nickname")
                        .HasColumnType("TEXT");

                    b.Property<string>("NpSN")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlatformType")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlatformUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PublisherAccountId")
                        .HasColumnType("TEXT");

                    b.Property<int>("RepresentCharacterServerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SteamId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UmKey")
                        .HasColumnType("TEXT");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserKey")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.Weapon", b =>
                {
                    b.Property<long>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("BoundCharacterServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Exp")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StarGrade")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UniqueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.AccountCurrency", b =>
                {
                    b.HasOne("BlueArchiveAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.AccountLevelReward", b =>
                {
                    b.HasOne("BlueArchiveAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.AccountTutorial", b =>
                {
                    b.HasOne("BlueArchiveAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.Character", b =>
                {
                    b.HasOne("BlueArchiveAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlueArchiveAPI.Models.User", b =>
                {
                    b.OwnsOne("BlueArchiveAPI.Models.ContentInfo", "ContentInfo", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Id")
                                .HasColumnType("INTEGER");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.OwnsOne("BlueArchiveAPI.Models.ArenaDataInfo", "ArenaDataInfo", b2 =>
                                {
                                    b2.Property<int>("ContentInfoUserId")
                                        .HasColumnType("INTEGER");

                                    b2.Property<long>("SeasonId")
                                        .HasColumnType("INTEGER");

                                    b2.HasKey("ContentInfoUserId");

                                    b2.ToTable("Users");

                                    b2.WithOwner()
                                        .HasForeignKey("ContentInfoUserId");
                                });

                            b1.OwnsOne("BlueArchiveAPI.Models.MultiFloorRaidDataInfo", "MultiFloorRaidDataInfo", b2 =>
                                {
                                    b2.Property<int>("ContentInfoUserId")
                                        .HasColumnType("INTEGER");

                                    b2.Property<long>("SeasonId")
                                        .HasColumnType("INTEGER");

                                    b2.HasKey("ContentInfoUserId");

                                    b2.ToTable("Users");

                                    b2.WithOwner()
                                        .HasForeignKey("ContentInfoUserId");
                                });

                            b1.Navigation("ArenaDataInfo");

                            b1.Navigation("MultiFloorRaidDataInfo");
                        });

                    b.OwnsOne("BlueArchiveAPI.Models.GameSettings", "GameSettings", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("INTEGER");

                            b1.Property<DateTimeOffset>("CurrentDateTime")
                                .HasColumnType("TEXT");

                            b1.Property<bool>("EnableMultiFloorRaid")
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("ForceDateTime")
                                .HasColumnType("INTEGER");

                            b1.Property<DateTimeOffset>("ForceDateTimeOffset")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .HasColumnType("INTEGER");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("ContentInfo");

                    b.Navigation("GameSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
